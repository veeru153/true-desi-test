{"version":3,"sources":["components/styles.module.css","components/header.png","components/Header.js","components/TheForm.js","components/Results.js","components/questions.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","props","className","styles","join","src","headerImg","alt","resultsDisplayed","headerText","TheForm","onReset","resetTest","onSubmit","finishTest","questions","map","q","index","startsWith","question","key","questionContainer","id","onChange","e","handleChange","type","for","href","target","rel","btnContainer","btnStyles","Results","total","percentage","Math","floor","score","grade","comment","console","log","resultNum","reaction","onClick","redoTest","style","margin","App","useState","setScore","displayResults","setDisplayResults","handleResultDisplay","length","tempScore","checked","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.c704c3be.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"styles_Header__2Nr80\",\"headerText\":\"styles_headerText__2xAeN\",\"TheForm\":\"styles_TheForm__1aLi-\",\"question\":\"styles_question__PxOPt\",\"questionContainer\":\"styles_questionContainer__1Kb1s\",\"btnContainer\":\"styles_btnContainer__DJ3Yx\",\"btnStyles\":\"styles_btnStyles__11-z5\",\"resultNum\":\"styles_resultNum__9Vsbi\",\"shareBtns\":\"styles_shareBtns__14_1i\",\"reaction\":\"styles_reaction__1quBW\"};","module.exports = __webpack_public_path__ + \"static/media/header.00459ea0.png\";","import React from 'react';\n\nimport styles from './styles.module.css';\nimport headerImg from './header.png';\n\nconst Header = (props) => {\n    return (\n        <div className={[styles.Header].join(' ')}>\n            <img src={headerImg} alt=\"header\" />\n            {!props.resultsDisplayed ? (\n                <div>\n                    <div className={styles.headerText}>\n                        <p>The True Desi Test is a parody of the Rice Purity Test.</p>\n                        <p>It's a voluntary opportunity for people to test their \"desi\" tendencies and find out how \"desi\" they really are.</p>\n                    </div>\n                    <strong>Caution: If you score below 100% khana nahi milega!</strong>\n                </div>\n            ) : null}\n        </div>\n    )\n}\n\nexport default Header;","import React from 'react';\n\nimport styles from './styles.module.css';\n\nconst TheForm = (props) => {\n    return (\n        <div className={styles.TheForm}>\n            <form onReset={props.resetTest} onSubmit={props.finishTest}>\n            <ol>\n                    {\n                        props.questions.map( (q, index) => {\n                            if(q.startsWith('https://')) {\n                                return (\n                                    <li className={styles.question} key={index}>\n                                        <div className={styles.questionContainer}>\n                                            <input \n                                                id={index}\n                                                onChange={(e) => props.handleChange(e)}\n                                                type=\"checkbox\"\n                                            />\n                                            <label for={index}>\n                                                <a href={q} target=\"_blank\" rel=\"noopener noreferrer\">Click me?</a>\n                                            </label>\n                                        </div>\n                                    </li>\n                                )\n                            } else {\n                                return (\n                                    <li className={styles.question} key={index}>\n                                        <div className={styles.questionContainer}>\n                                            <input \n                                                id={index}\n                                                onChange={(e) => props.handleChange(e)}\n                                                type=\"checkbox\" \n                                            />\n                                            <label for={index}>{q}</label>\n                                        </div>\n                                    </li>\n                                )\n                            }\n                        })\n                    }\n                </ol>\n                <div className={styles.btnContainer}>\n                    <button \n                        type=\"submit\"\n                        className={styles.btnStyles}\n                    >\n                        Calculate My Score!\n                    </button>\n                    <button\n                        type=\"reset\"\n                        className={styles.btnStyles}\n                    >\n                        Clear checkboxes\n                    </button>\n                </div>\n            </form>\n        </div>\n    )\n}\n\nexport default TheForm;","import React from 'react';\n\nimport styles from './styles.module.css'\n\nconst Results = (props) => {\n    let total = props.total != 0 ? props.total : 1;\n    let percentage = Math.floor((props.score / total)*100);\n    let grade = \"F\";\n    let comment = <h3>Nikal! Pehli fursat mein nikal!</h3>;\n    console.log(props.score, total, props.score / total)\n\n    if(percentage > 60) {\n        grade = \"D-\";\n        comment = <img src=\"https://cdn.discordapp.com/attachments/727483321852100700/727900377223266344/ezgif-2-c80260d829fb.gif\" alt=\"Getting Beaten Up\"></img>;\n    }\n    if(percentage > 65) {\n        grade = \"D\";\n    }\n    if(percentage > 70) {\n        grade = \"C-\";\n        comment = <img src=\"https://cdn.discordapp.com/attachments/727483321852100700/727930698232627260/thequint_2015-12_88ece578-6541-4eba-972e-ace6cbac00c0_vggre.gif\" alt=\"Don't Angry Me\"></img>;\n    }\n    if(percentage > 75) {\n        grade = \"C\";\n    }\n    if(percentage > 80) {\n        grade = \"B-\";\n        comment = <img src=\"https://66.media.tumblr.com/b3155c64aad3055877356e0aaffe3881/tumblr_o5sq4e9l9C1rhwgkjo1_250.gifv\" alt=\"Dramatic Staring Scene\"></img>\n    }\n    if(percentage > 85) {\n        grade = \"B\";\n        comment = <img src=\"https://i.gifer.com/7Egy.gif\" alt=\"Kajol Hai Bhagwan\"></img>\n    }\n    if(percentage > 90) {\n        grade = \"A-\";\n        comment = <img src=\"https://thumbs.gfycat.com/CrazyFlickeringIndianskimmer-small.gif\" alt=\"Hrithik Okay Hand\"></img>\n    }\n    if(percentage > 95) {\n        grade = \"A\";\n        comment = <img src=\"https://thumbs.gfycat.com/UnawareKeenLarva-size_restricted.gif\" alt=\"Thaliava Salute\"></img>\n    } \n    if(percentage == 99) comment = <h3>You got 99%? Where did the extra 1% go!?</h3>\n    if(percentage == 100) comment = <img src=\"https://cdn.discordapp.com/attachments/727483321852100700/727934556065497148/ezgif-2-e07a041f6cb7.gif\" alt=\"Sachin 100\"></img>\n\n    return (\n        <div>\n            <h2>Your score:</h2>\n            <h1 className={styles.resultNum}>\n                {props.score}/{props.total}\n            </h1>\n            <h3 className={styles.percentage}>\n                ({percentage}%) - {grade}\n            </h3>\n            <div className={styles.reaction}>\n                {comment}\n            </div>\n            <p><strong>Find out the uncultured friend in your group.</strong></p>\n            <p><strong>(Screenshot and send/share this please ok thanks)</strong></p>\n            <p><a href=\"https://veeru153.github.io/true-desi-test\">https://veeru153.github.io/true-desi-test</a></p>\n            <div className={styles.btnContainer}>\n                <button \n                    onClick={props.redoTest} \n                    className={styles.btnStyles}\n                    style={{ margin: 'auto' }}\n                >Redo</button>\n            </div>\n        </div>\n    )\n}\n\nexport default Results;","const questions = [\n    \"Dreamt of studying in an IIT?\",\n    \"Picked up a book you dropped and kissed/held it near the chest or forehead.\",\n    \"Always heard the “Bade hoke kya banoge” question?\",\n    \"Whenever you meet relatives after a long time, they always say “Kitne bade ho gaye tum?\",\n    \"Had parents/relatives tell you to play basketball to automatically grow taller?\",\n    \"Got/Saw someone get a tikka to protect from 'nazar'?\",\n    \"Were told to show off your talents to relatives who were visiting your place?\",\n    \"Been told you’ll be sent to a boarding school if you didn’t stop acting up.\",\n    \"Been hit with Chappal/Belan/Broom?\",\n    \"Heard “paap lagega” from a relative?\",\n    \"Did not want to do the praying stuff because you were busy having fun bursting crackers during Diwali?\",\n    \"Asked or have been asked for Seviyan (Vermicelli) during Eid?\",\n    \"Forwarded something to someone else that you received as a gift?\",\n    \"Argued about superstitions with your family elders?\",\n    \"Had to fight to obtain door closing rights?\",\n    \"Been hit by grease, eggs, and who knows what during Holi?\",\n    \"Hung or saw someone hang the classic Nimbu-Mirchi combo?\",\n    \"Drank ‘haldi wala doodh’ (Turmeric Milk) or ‘kadha’ when you were sick?\",\n    \"Were given “Dahi Cheeni” (Yogurt with Sugar) before any major exam or interview?\",\n    \"Ate soaked almonds to improve memory?\",\n    \"Religiously drank Bournvita/Boost/Horlicks to grow taller?\",\n    \"Had to explain to a foreigner what Limca was cause they never heard of it despite it being from the Coca Cola company?\",\n    \"Played games like Kho Kho, Kabaddi, Gully Cricket, Sakhli, etc. in the colony?\",\n    \"Owned and threatened to take the bat home when you were out while playing cricket?\",\n    \"Were told not to chuck the ball?\",\n    \"Said that was a Trial Ball when you were out on the first ball while playing cricket?\",\n    \"Saw India win the 2011 ICC World Cup Live (Replays don't count!)?\",\n    \"Used gates, stones as goals while playing football?\",\n    \"Used a stack of bricks as wickets while playing cricket?\",\n    \"Played ‘Name Place Animal Thing’, ‘Pen Fight’ during breaks in class?\",\n    \"Played Antakshari with friends and often judged people’s song tastes over not knowing popular tunes?\",\n    \"Covered notebooks for school?\",\n    \"Fought over whether 'Atlantic' was a valid place in a game of Atlas?\",\n    \"Heard “YEH CLASSROOM HAI YA FISH MARKET!?” from your teachers when the class was loud?\",\n    \"Felt like it was a big thing when you were made to switch from a pencil to a pen in school?\",\n    \"Got textbooks from older students or friends?\",\n    \"Took Kissan Ketchup Roll or Jam Roll to school for lunch after seeing the adverts on TV?\",\n    \"Were forced to add veggies to Maggi despite not liking them?\",\n    \"Tried Rasna before Tang?\",\n    \"Saw someone eat or ate rice with hands?\",\n    \"Ate Patties and Samosas from the school canteen during the lunch break?\",\n    \"Distributed chocolates to the entire class while not wearing a uniform in school on your birthday?\",\n    \"Crave Indian street Chilli Potato, Chowmein, Momos, etc?\",\n    \"Prefer Ice Golas over Ice Lollies?\",\n    \"Prefer kulfi over ice cream?\",\n    \"Prefer Masala Tea over other tea flavors?\",\n    \"Prefer Indianized Chinese food over the actual Chinese dishes.\",\n    \"Prefer Indian sweets over other sweets/candy?\",\n    \"Felt weird when foreigners would call Roti/Chappati Bread?\",\n    \"Would sell your soul for a plate of Rajma Chawal?\",\n    \"Have better spice tolerance than literally everyone else?\",\n    \"Consider Chutney >>>>>>> Ketchup?\",\n    \"Have a place dedicated to spices in the cupboard in the kitchen?\",\n    \"Have Ghee in the kitchen?\",\n    \"Have a cut lemon/onion in the fridge?\",\n    \"Consider Dairy Milk >>>>>>> any other chocolate?\",\n    \"Were addicted to Perk or 5 Star?\",\n    \"Left super early for the airport?\",\n    \"Carried or tried to carry ‘Dadi ka Aachar’ on flights?\",\n    \"Rearranged stuff in suitcases at the airport to prevent paying for extra baggage?\",\n    \"Were introduced to Disney shows through Best of Luck Nikki or Suite Life of Karan and Kabir instead of the original ones?\",\n    \"Watched Pokémon or Dragon Ball after returning from school?\",\n    \"Were obsessed with collecting Cricket Attax cards, Pokémon Cards, Beyblades or IPL Cards?\",\n    \"Watched the Hindi dub of Doraemon, Crayon Shinchan?\",\n    \"Felt weird when they would show Japan from space but call it India in Doraemon?\",\n    \"Watched Tarak Mehta Ka Oolta Chashma?\",\n    \"Were mad at Chotta Bheem for marrying Indumati instead of Chutki?\",\n    \"Saw the OG Ramayan and Mahabharat?\",\n    \"Were or are obsessed with Indian music from the 70s to 90s?\",\n    \"https://youtu.be/vTIIMJ9tUc8\",\n    \"Seen or read Malgudi Adventures?\",\n    \"Watched Sooryavansham on Set Max?\",\n    \"Watched Sholay?\",\n    \"Cried while watching Taare Zameen Par?\",\n    \"https://www.google.com/search?q=dhoop+koi+mil+gaya&tbm=isch\",\n    \"Spread your arms out like Shah Rukh Khan?\",\n    \"Quoted a movie with Shah Rukh Khan in it?\",\n    \"Saw a movie/TV show where a character turns into a snake?\",\n    \"Have watched at least one movie of each of the three Khans?\",\n    \"Felt uncomfortable when a sensual scene or ad played on the TV when you were with family?\",\n    \"Have a/Are the relative who lives in the US, Canada or Australia?\",\n    \"“Do you speak Indian?”\",\n    \"Understand or speak at least two South Asian languages?\",\n    \"Were asked to buy expensive stuff for the family back home?\",\n    \"Were mocked for having a weak stomach because you lived outside and couldn’t eat the street food back home?\",\n    \"Were compared to “Sharmaji ki beti/beta” across the street?\",\n    \"Visited Manali or Goa for vacation?\",\n    \"Used your friends name to convince your parents to let you hang out?\",\n    \"Had to hide your crush/boyfriend/girlfriend from the aunties in your colony or your parents?\",\n    \"Heard the typical “log kya kahenge?” sentence?\",\n    \"Bargained with the “rickshaw vala bhaiya”?\",\n    \"Saw a truck with \\\"HORN OK PLEASE\\\" written in a fancy font?\",\n    \"Preferred stopping at a roadside Dhaba instead of a McDonald's on a road trip?\",\n    \"Had to ask permission before buying anything that wasn't stationary/academic?\",\n    \"Received a toffee or a small chocolate instead of change?\",\n    \"\\\"Yeh melody itni chocolatey kyu hai?\\\"\",\n    \"Tried home made medicine to cure a cold before visiting a doctor? (Mulethi FTW)\",\n    \"Ate Chyawanprash as a kid?\",\n    \"Were forced to try Patanjali stuff to improve immunity?\",\n    \"Rubbed or inhaled Vicks?\",\n]\n\nexport default questions;","import React, { useState } from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport TheForm from './components/TheForm';\nimport Results from './components/Results';\nimport questions from './components/questions';\n\nfunction App() {\n    const [score, setScore] = useState(0);\n    const [displayResults, setDisplayResults] = useState(false);\n\n    const handleResultDisplay = () => {\n        if(displayResults) setScore(0);\n        setDisplayResults(!displayResults);\n    }\n\n    const handleCheckbox = (e) => {\n        let tempScore = score;\n        if(e.target.checked) tempScore+=1;\n        if(!e.target.checked) tempScore-=1;\n        setScore(tempScore);\n    }\n    \n    return (\n        <div className=\"App\">\n            <Header resultsDisplayed={displayResults}/>\n            {!displayResults ? \n                <TheForm handleChange={handleCheckbox} finishTest={handleResultDisplay} questions={questions} resetTest={() => setScore(0)}/> : \n                <Results score={score} total={questions.length} redoTest={handleResultDisplay}/>\n            }\n            <p>\n                © OFFICIAL TRUE DESI TEST. DESIGN FROM RICE PURITY TEST. \n            </p>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}